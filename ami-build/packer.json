{
  "builders": [
    {
      "ami_description": "Amazon Linux 2 AMI build from the AMI pipeline for use within the Infrastructure CodePipeline",
      "ami_name": "{{user `ami_name` | clean_resource_name}}",
      "associate_public_ip_address": "false",
      "instance_type": "t3.micro",
      "name": "CodePipeline AMI Builder",
      "region": "{{user `aws_region`}}",
      "run_tags": {
        "Name": "{{user `ami_name`}}"
      },
      "run_volume_tags": {
        "Name": "{{user `ami_name`}}"
      },
      "snapshot_tags": {
        "Name": "{{user `ami_name`}}"
      },
      "source_ami_filter": {
        "filters": {
          "name": "amzn2-ami-hvm-*",
          "root-device-type": "ebs",
          "virtualization-type": "hvm"
        },
        "most_recent": true,
        "owners": [
          "137112412989"
        ]
      },
      "ssh_username": "ec2-user",
      "subnet_id": "{{user `subnet`}}",
      "tags": {
        "Name": "{{user `ami_name`}}"
      },
      "type": "amazon-ebs",
      "vpc_id": "{{user `vpc`}}"
    }
  ],
  "provisioners": [
    {
      "inline": [
        "sudo yum update -y"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "sudo yum install java-1.8.0-openjdk -y"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "sudo tee /etc/systemd/system/tomcat.service<<EOF\n[Unit]\nDescription=Tomcat Server\nAfter=syslog.target network.target\n[Service]\nType=forking\nUser=tomcat\nGroup=tomcat\nEnvironment=CATALINA_HOME=/opt/tomcat9\nEnvironment=CATALINA_BASE=/opt/tomcat9\nEnvironment=CATALINA_PID=/opt/tomcat9/temp/tomcat.pid\nExecStart=/opt/tomcat9/bin/catalina.sh start\nExecStop=/opt/tomcat9/bin/catalina.sh stop\nRestartSec=12\nRestart=always\n[Install]\nWantedBy=multi-user.target\nEOF"
      ],
      "type": "shell"
    },
    {
      "destination": "/tmp/tomcat9", 
      "source": "/tmp/tomcat9",
      "type": "file"
    },
    {
      "inline": [
        "sudo mkdir /opt/tomcat9 && sudo mv /tmp/tomcat9/* /opt/tomcat9"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "sudo useradd -r tomcat && sudo chown -R tomcat:tomcat /opt/tomcat9"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "sudo mkdir -p /home/ec2-user/Flexera/Linux && sudo cd /home/ec2-user/Flexera && sudo chmod 755 Linux && sudo aws s3 cp s3://sept2021-flexeraproject-installationfiles/flexera/Linux-FNMS-Agent-RHEL-CentOS-64-Bit/managesoft-17.0.2-1.x86_64.rpm ./ && sudo aws s3 cp s3://sept2021-flexeraproject-installationfiles/flexera/Linux-FNMS-Agent-RHEL-CentOS-64-Bit/mgsft_rollout_cert ./ && sudo aws s3 cp s3://sept2021-flexeraproject-installationfiles/flexera/Linux-FNMS-Agent-RHEL-CentOS-64-Bit/mgsft_rollout_response ./  && sudo aws s3 cp s3://sept2021-flexeraproject-installationfiles/flexera/Linux-FNMS-Agent-RHEL-CentOS-64-Bit/Linux/mgssetup.ini ./ && sudo cp -pv mgsft_rollout_cert mgsft_rollout_response /var/tmp && sudo mv -v managesoft-17.0.2-1.x86_64.rpm /home/ec2-user/Flexera/Linux/ && sudo mv -v mgssetup.ini /home/ec2-user/Flexera/Linux/ && sudo cd Linux && sudo rpm --upgrade --oldpackage --verbose managesoft-17.0.2-1.x86_64.rpm"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "rm .ssh/authorized_keys ; sudo rm /root/.ssh/authorized_keys"
      ],
      "type": "shell"
    }
  ],
  "variables": {
    "ami_name": "{{env `PROJECT`}}-{{env `ENVIRONMENT`}}-{{env `PIPELINENAME`}}-{{isotime \"02-Jan-06 03_04_05\"}}",
    "aws_region": "{{env `AWS_REGION`}}",
    "subnet": "{{env `BUILD_SUBNET_ID`}}",
    "vpc": "{{env `BUILD_VPC_ID`}}"
  }
}

